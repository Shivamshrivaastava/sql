
Easy Level

Q1: What is a primary key in a database, and why is it important? Provide an example using the students table.
Ans:-A primary key is a unique identifier for a row in a table. It ensures that no two rows have the same value for this column. 
For example, in the students table, id can be the primary key as it uniquely identifies each student.

Q2: What does the SELECT statement do in MySQL? Write a query to retrieve all records from the students table.
Ans: - The SELECT statement is used to fetch data from a database.
SELECT * FROM students;

Q3: How do you insert data into a table using MySQL? Insert a new student (id: 5, name: Emily, age: 21) into the students table.
Ans: - INSERT INTO students (id, name, age) VALUES (5, 'Emily', 21);

Q4: What is the purpose of a foreign key? Explain with respect to the orders table.
Ans: - A foreign key establishes a relationship between two tables. For example, in the orders table, the customer_id is a foreign 
key that references the id column in the students table. It ensures that an order is linked to a valid student.

Q5: How can you delete a record from the students table where the id = 2?
Ans: - DELETE FROM students WHERE id = 2;

Q6: What is the difference between DELETE and TRUNCATE in SQL? Provide an example.
Ans: - DELETE removes specific rows based on a condition.
- TRUNCATE removes all rows from a table and resets the identity counter.

Examples:
DELETE FROM students WHERE id = 2; -- Deletes only the row where id = 2
TRUNCATE TABLE students; -- Deletes all rows and resets the table

Q7: How can you update a student's age? Write a query to update Charlieâ€™s age to 21 in the students table.
And: - UPDATE students SET age = 21 WHERE name = 'Charlie';

Medium Level

Q1: Why do we need tabular data instead of storing everything in a single file? Explain the benefits using the students and orders tables.
Ans: - Storing data in separate tables allows for:
- Reduced redundancy: A student's data is stored in the students table, not repeated in orders.
- Improved performance: Queries are faster because the data is normalized.
- Easier maintenance: Changes are made in one table, not multiple places.

Q2: Understanding database relationships, how does the customer_id in the orders table relate to the id in the students table? Why is this important?
Ans: - The customer_id in the orders table is a foreign key referencing the id in the students table. This relationship ensures that 
every order is associated with a valid student, maintaining data integrity.

Q3: Write an SQL query to find all orders placed after January 12, 2025.
Ans: - SELECT * FROM orders WHERE order_date > '2025-01-12';

Q4: Write an SQL query to delete all records from the orders table where the order_status is "Cancelled".
Ans: - DELETE FROM orders WHERE order_status = 'Cancelled';

Hard Level

Q1: Write an SQL query to find the total number of orders placed by each student, showing the results in ascending order of total orders.
Ans: - SELECT customer_id, COUNT(order_id) AS total_orders
FROM orders
GROUP BY customer_id
ORDER BY total_orders ASC;

Q2: Write an SQL query to display all students who have not placed any orders.
Ans: - SELECT s.id, s.name, s.age
FROM students s
LEFT JOIN orders o ON s.id = o.customer_id
WHERE o.customer_id IS NULL;
